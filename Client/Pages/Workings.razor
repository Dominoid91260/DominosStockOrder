@page "/Workings"
@using DominosStockOrder.Client.Components
@using DominosStockOrder.Client.Services
@using DominosStockOrder.Shared
@using DominosStockOrder.Shared.ViewModels
@inject FoodTheoService FoodTheo

<PageTitle>Workings</PageTitle>

@if (FoodTheo.Loading)
{
    <div class="row">
        <p>Loading...</p>
    </div>
}
else if (!_workings.Any())
{
    <div class="row">
        <p>No data</p>
    </div>
}
else
{
    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="weelyTheoSwitch" @bind="_showWeeklyTheo">
        <label class="form-check-label" for="weelyTheoSwitch">Show Weekly Theo</label>
    </div>

    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="extraTheoSwitch" @bind="@_showExtraTheo">
        <label class="form-check-label" for="extraTheoSwitch">Show Extra Theo</label>
    </div>

    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" id="transferSwitch" @bind="@_showTransfers">
        <label class="form-check-label" for="transferSwitch">Show Transfers</label>
    </div>

    <div class="row">
        <div class="col-2 fw-bold">Description</div>

        @if (_showWeeklyTheo)
        {
            for (var i = 0; i < Constants.NumFoodTheoWeeks; ++i)
            {
                var today = DateTime.Now;
                var weekEnding = today.AddDays(-(int)today.DayOfWeek).AddDays(-7 * i);
                <div class="col fw-bold">@weekEnding.ToString("dd/MM")</div>
            }
        }

        <div class="col fw-bold">Combined Average</div>
        <div class="col fw-bold">In Store</div>

        @if (_showExtraTheo)
        {
            <div class="col fw-bold">Additional Usage</div>
        }

        @if (_showTransfers)
        {
            <div class="col fw-bold">Transferred</div>
        }

        <div class="col fw-bold">To Order</div>
    </div>

    @foreach (var working in _workings)
    {
        <WorkingComponent @key="@working.PulseCode" Working="@working" ShowWeeklyTheo="@_showWeeklyTheo" ShowExtraTheo="@_showExtraTheo" ShowTransferred="@_showTransfers" />
    }
}

@code {
    private IEnumerable<WorkingsVM> _workings = Enumerable.Empty<WorkingsVM>();
    private bool _showWeeklyTheo = true;
    private bool _showExtraTheo = false;
    private bool _showTransfers = false;

    protected override void OnInitialized()
    {
        _workings = FoodTheo.GetAllWorkings();
    }
}
